---
- hosts: localhost
  become: yes
  tasks:
    ##################
    ## APT Packages ##
    ##################

    - name: remove packages
      apt:
        name:
          - i3xrocks-rofication # Replaced with dunst
          - regolith-rofication # Replaced with dunst
          - snapd # Flatpak is superior
        state: absent
        purge: yes

    - name: update & upgrade apt packages
      apt:
        upgrade: full
        update_cache: yes
        cache_valid_time: 3600

    - name: add apt signing keys
      ansible.builtin.apt_key:
        url: "{{ item }}"
        state: present
      with_items:
        - "https://download.docker.com/linux/ubuntu/gpg"
        - "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
        - "https://packages.microsoft.com/keys/microsoft.asc"

    - name: add apt repositories
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        state: present
      with_items:
        - "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
        - "deb https://packages.cloud.google.com/apt cloud-sdk main"
        - "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
        - "ppa:linrunner/tlp"
        - "ppa:neovim-ppa/stable"
        - "ppa:peek-developers/stable"
        - "ppa:yubico/stable"

    - name: install apt packages
      apt:
        update_cache: yes
        cache_valid_time: 3600
        pkg:
        - acpi-call
        - apt-transport-https
        - bat
        - build-essential
        - ca-certificates
        - chromium-browser
        - containerd.io
        - curl
        - code
        - docker-ce
        - docker-ce-cli
        - docker-compose
        - dunst # Popup notifications in regolith
        - firefox
        - flatpak
        - fprintd # Fingerprint reader
        - git
        - gnupg-agent
        - google-cloud-sdk
        - gpg
        - htop
        - intel-media-va-driver-non-free # Intel Gen 8+ VAAPI
        - inxi
        - libpam-fprintd # Fingerprint reader PAM integration
        - linux-tools-common
        - linux-tools-generic
        - mc
        - mpv
        - neofetch
        - neovim
        - pass
        - peek
        - powertop
        - python3-pip
        - regolith-todo
        - smartmontools
        - software-properties-common
        - steam
        - tlp
        - tlp-rdw
        - tmux
        - transmission
        - ubuntu-restricted-extras
        - xclip # Pipe to clipboard
        - xz-utils # Required for ansible extract deb package
        - yubikey-manager
        - zsh

    - name: install apt with --no-recommends
      apt:
        install_recommends: no
        pkg:
          - libreoffice-calc
          - libreoffice-gtk3

    - name: install statusbar indicators
      apt:
        pkg:
        - i3xrocks-battery
        - i3xrocks-cpu-usage
        - i3xrocks-media-player
        - i3xrocks-memory
        - i3xrocks-nm-vpn
        - i3xrocks-temp
        - i3xrocks-todo
        - i3xrocks-wifi

    - name: clean & remove apt packages
      apt:
        autoclean: yes
        autoremove: yes

    #############
    ## FlatPak ##
    #############

    - name: add the flathub flatpak repository
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user
      become_user: fredrick

    - name: install flatpak packages
      community.general.flatpak:
        name: "{{ item }}"
        state: present
        method: user
      become_user: fredrick
      with_items:
        - com.discordapp.Discord
        - com.github.wwmm.easyeffects
        - com.gitlab.newsflash
        - com.prusa3d.PrusaSlicer
        - com.slack.Slack
        - com.spotify.Client
        - io.github.hmlendea.geforcenow-electron

    ##################
    ## DEB Packages ##
    ##################

    - name: install deb packages
      apt:
        deb: "{{ item }}"
      with_items:
        - https://downloads.slack-edge.com/releases/linux/4.23.0/prod/x64/slack-desktop-4.23.0-amd64.deb
        - https://github.com/charmbracelet/glow/releases/download/v1.4.1/glow_1.4.1_linux_amd64.deb
        - https://github.com/josh-richardson/cadmus/releases/latest/download/cadmus.deb
        - https://go.microsoft.com/fwlink/?LinkID=760868 # vscode

    ##############
    ## Binaries ##
    ##############

    # docker-credential-helpers
    - name: check docker-credential-helpers version
      command: /usr/local/bin/docker-credential-pass version
      ignore_errors: yes # First time binary does not exist
      no_log: True # Hide the error log when binary is missing
      register: dch_version
      changed_when: False # Either ok or failed, where is no changed
      failed_when: dch_version.rc == 1 or "0.6.4" not in dch_version.stdout

    - name: download docker-credential-helpers
      get_url:
        url="https://github.com/docker/docker-credential-helpers/releases/download/v0.6.4/docker-credential-pass-v0.6.4-amd64.tar.gz"
        dest="/tmp/docker-credential-pass-v0.6.4-amd64.tar.gz"
      when: dch_version is failed

    - name: extract docker-credential-pass into /usr/local/bin
      ansible.builtin.unarchive:
        src: /tmp/docker-credential-pass-v0.6.4-amd64.tar.gz
        dest: /usr/local/bin
      when: dch_version is failed

    - name: change perm of "/usr/local/bin/docker-credential-pass", adding "+x"
      file: dest=/usr/local/bin/docker-credential-pass mode=a+x
      when: dch_version is failed

    # ncspot, terminal spotify
    - name: check ncspot version
      command: /usr/local/bin/ncspot --version
      ignore_errors: yes # First time binary does not exist
      no_log: True # Hide the error log when binary is missing
      register: ncspot_version
      changed_when: False # Either ok or failed, where is no changed
      failed_when: ncspot_version.rc == 1 or "0.9.5" not in ncspot_version.stdout

    - name: download ncspot
      get_url:
        url="https://github.com/hrkfdn/ncspot/releases/download/v0.9.5/ncspot-v0.9.5-linux-x86_64.tar.gz"
        dest="/tmp/ncspot-v0.9.5-linux-x86_64.tar.gz"
      when: ncspot_version is failed

    - name: extract ncspot into /usr/local/bin
      ansible.builtin.unarchive:
        src: /tmp/ncspot-v0.9.5-linux-x86_64.tar.gz
        dest: /usr/local/bin
      when: ncspot_version is failed

    - name: change perm of "/usr/local/bin/ncspot", adding "+x"
      file: dest=/usr/local/bin/ncspot mode=a+x
      when: ncspot_version is failed
